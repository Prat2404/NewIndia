Integrating data
PM Gati Shakti Master Plan is aimed to tackle the above challenges. It provides a comprehensive database of ongoing and future projects of Infrastructure Ministries of Centre and States. The data will be integrated with 200+ GIS layers with visibility to various stakeholders so that planning, designing, and execution can be done with a shared vision. Project delivery will achieve efficiency through collaboration, coordination, data-backed project planning and real-time data analysis.

One of the main themes of Gati Shakti is multi-modal connectivity. It aims at seamless integration of systems and policies alongside efficient project management. Gati Shakti projects will leverage technology extensively including spatial planning and data analysis tools. This techno-enabled approach to infrastructure development where data on project geography, with multiple layers of project information of 16 infrastructure ministries, all integrated into a single database will ultimately break the silos of information management and enable faster decision making.
Code
// C++ program for reversal algorithm
// of array rotation
  
#include <bits/stdc++.h>
using namespace std;
  
// Function to reverse arr[] 
// from index start to end
void reverseArray(int arr[], int start, int end)
{
    while (start < end) {
        int temp = arr[start];
        arr[start] = arr[end];
        arr[end] = temp;
        start++;
        end--;
    }
}
  
// Function to left rotate arr[] of size n by d
void leftRotate(int arr[], int d, int n)
{
    if (d == 0)
        return;
      
    // In case the rotating factor is
    // greater than array length
    d = d % n;
  
    reverseArray(arr, 0, d - 1);
    reverseArray(arr, d, n - 1);
    reverseArray(arr, 0, n - 1);
}
  
// Function to print an array
void printArray(int arr[], int size)
{
    for (int i = 0; i < size; i++)
        cout << arr[i] << " ";
}
  
// Driver code
int main()
{
    int arr[] = { 1, 2, 3, 4, 5, 6, 7 };
    int N = sizeof(arr) / sizeof(arr[0]);
    int d = 2;
  
    // Function call
    leftRotate(arr, d, N);
    printArray(arr, N);
    return 0;
}
